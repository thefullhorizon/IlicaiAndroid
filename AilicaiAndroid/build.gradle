apply plugin: 'com.android.application'
apply plugin: 'com.growingio.android'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'http://192.168.1.3:9081/nexus/content/groups/public' }
    flatDir {
        dirs 'libs'
    }
}


def Beta = "BETA"
def Release = "RELEASE"
def Channel = "ilicai"
def Sit = "SIT"
def UMENG_CHANNEL_VALUE = "UMENG_CHANNEL_VALUE"

android {
    compileSdkVersion 25
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "com.ailicai.app"
        minSdkVersion 16
        targetSdkVersion 19
        versionCode 110
        versionName "1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        /**
         * 批量打包建议java代码中手动设置Umeng渠道
         */
        manifestPlaceholders.put(UMENG_CHANNEL_VALUE, Channel)

        // Enabling multidex support.
        multiDexEnabled true

        ndk {
            //设置支持的SO库架构
            abiFilters "armeabi"
            //abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        resValue("string", "growingio_project_id", "9f6117ba867d4d36")
        resValue("string", "growingio_url_scheme", "growing.24d83f7d1764c766")


        signingConfigs {
            debug {
                storeFile file("keystore/ailicai.jks")
                storePassword "iwjw_android"
                keyAlias "ailicai_key"
                keyPassword "iwjw_android"
            }

            release {
                storeFile file("keystore/ailicai.jks")
                storePassword "iwjw_android"
                keyAlias "ailicai_key"
                keyPassword "iwjw_android"
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField "String", "BUILDVERSION", appendQuotes("RELEASE")
            buildConfigField "String", "BUILDNUMBER", appendQuotes("RELEASE" + Integer.parseInt(project.RCVersion))
        }

        beta {
            minifyEnabled false
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            buildConfigField "String", "BUILDVERSION", appendQuotes("BETA")
            buildConfigField "String", "BUILDNUMBER", appendQuotes("BETA" + Integer.parseInt(project.RCVersion))
        }

        debug {
            minifyEnabled false
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            buildConfigField "String", "BUILDVERSION", appendQuotes("DEBUG")
            buildConfigField "String", "BUILDNUMBER", appendQuotes("DEBUG" + Integer.parseInt(project.RCVersion))
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        //checkReleaseBuilds false
        abortOnError false
        quiet false
        showAll true
        disable 'InvalidPackage'
    }

    dexOptions {
        maxProcessCount 8
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }

    productFlavors {
        ailicai {}
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def RC = Integer.parseInt(project.RCVersion)
            def RCDate = getRCDate()
            def apkFile = output.outputFile //*.apk
            def buildType = variant.buildType.name
            def flavorName = variant.productFlavors[0].name//暂时不使用渠道标识
            def TAG
            if (buildType.contains("dev")) {
                TAG = Sit
            } else if (buildType.contains("beta")) {
                TAG = Beta
            } else if (buildType.contains("release")) {
                TAG = Release
            } else {
                TAG = buildType
            }

            def apkName = "AilicaiApp_V${defaultConfig.versionName}_${TAG}${RC}_${RCDate}.apk"
            output.outputFile = new File(apkFile.parent, apkFile.name.replace("${apkFile.name}", "${apkName}"))
        }
    }
}

def getRCDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

def appendQuotes(tag) {
    return "\"" + tag + "\""
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':AilicaiFramework')
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jungly:gridPasswordView:0.3'
    compile(name: 'UmengSocialSDK-6.0.3', ext: 'aar')
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
    betaCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    androidTestCompile 'com.google.code.findbugs:jsr305:3.0.0'
    compile('com.manyi.inthingsq.clients:android-connector:1.7-SNAPSHOT') {
        exclude group: 'android.support', module: 'compatibility-v4'
        exclude group: 'com.alibaba', module: 'fastjson'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.growingio.android:vds-android-agent:0.9.104@aar'
    //AVLoadingIndicatorView
    compile 'com.wang.avi:library:2.1.3'
    testCompile 'junit:junit:4.12'
    compile 'com.facebook.rebound:rebound:0.3.8'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.github.ksoichiro:android-observablescrollview:1.5.0'
    compile(name: 'gridpasswordview', ext: 'aar')
    compile files('libs/realm-android-0.87.5.jar')

    compile('com.google.android:flexbox:0.2.6') {
        exclude group: 'com.android.support'
    }

    compile 'com.github.florent37:viewanimator:1.0.5'
}

afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        //enable multidex
        dx.additionalParameters += '--multi-dex'
    }
}
